{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAkBH,EAAOI,iBAAiB,SAC5CC,EAAmB,GAmCvB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,IAEpBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,MAEpBA,MA1CPR,EAAOgB,iBAAiB,UAAU,SAAAC,GAChCA,EAAMC,iBAEmBf,EA2CrBgB,SAAQ,SAAAC,UAAOf,EAAiBe,EAAGC,MAAQD,EAAGE,SAxClD,IAFA,IAAIC,EAAQC,OAAOnB,EAAiBG,OAE3BiB,EAAI,EAAGA,GAAKpB,EAAiBqB,OAAQD,GAAK,EAC7CA,GAAK,EAEPnB,EAAcmB,EADdF,GAASC,OAAOnB,EAAiBsB,OAE9BC,MAAK,SAAAC,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAAhC,GAASiC,OAAOC,QACb,qBAAmCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAG7C0B,OAAM,SAAAL,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAAhC,GAASiC,OAAOI,QAAS,oBAAkCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAGrEF,EAAcmB,EAAGF,GACdK,MAAK,SAAAC,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAAhC,GAASiC,OAAOC,QACb,qBAAmCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAG7C0B,OAAM,SAAAL,OAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAAhC,GAASiC,OAAOI,QAAS,oBAAkCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,UAIzEH,EAAmB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst allInputsinForm = formEl.querySelectorAll('input');\nlet objectFromInputs = {};\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  setValuesInObjFromInputs(allInputsinForm);\n  let delay = Number(objectFromInputs.delay);\n\n  for (let i = 1; i <= objectFromInputs.amount; i += 1) {\n    if (i >= 2) {\n      delay += Number(objectFromInputs.step);\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n  objectFromInputs = {};\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction setValuesInObjFromInputs(arr) {\n  arr.forEach(el => (objectFromInputs[el.name] = el.value));\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$allInputsinForm","querySelectorAll","$ce04d3a99e08e73b$var$objectFromInputs","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","forEach","el","name","value","delay1","Number","i","amount","step","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.97851898.js.map"}