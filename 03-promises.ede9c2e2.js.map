{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAkBH,EAAOI,iBAAiB,SAChD,IAAIC,EAAmB,GAmCvB,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,UAAEN,QAAUC,IAEpBM,EAAO,UAAEP,QAAUC,MAEpBA,MA1CPR,EAAOgB,iBAAiB,UAAUC,IAChCA,EAAMC,iBAEmBf,EA2CrBgB,SAAQC,GAAOf,EAAiBe,EAAGC,MAAQD,EAAGE,QA1ClD,IAAIC,EAAQC,OAAOnB,EAAiBG,OAEpC,IAAK,IAAIiB,EAAI,EAAGA,GAAKpB,EAAiBqB,OAAQD,GAAK,EAC7CA,GAAK,GACPF,GAASC,OAAOnB,EAAiBsB,MACjCrB,EAAcmB,EAAGF,GACdK,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA/B,GAASgC,OAAOC,QACd,qBAAqBxB,QAAeC,UAGvCwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA/B,GAASgC,OAAOG,QAAQ,oBAAoB1B,QAAeC,WAG/DF,EAAcmB,EAAGF,GACdK,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA/B,GAASgC,OAAOC,QACd,qBAAqBxB,QAAeC,UAGvCwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA/B,GAASgC,OAAOG,QAAQ,oBAAoB1B,QAAeC,UAInEH,EAAmB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst allInputsinForm = formEl.querySelectorAll('input');\nlet objectFromInputs = {};\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n\n  setValuesInObjFromInputs(allInputsinForm);\n  let delay = Number(objectFromInputs.delay);\n\n  for (let i = 1; i <= objectFromInputs.amount; i += 1) {\n    if (i >= 2) {\n      delay += Number(objectFromInputs.step);\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    } else {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n  objectFromInputs = {};\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction setValuesInObjFromInputs(arr) {\n  arr.forEach(el => (objectFromInputs[el.name] = el.value));\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$allInputsinForm","querySelectorAll","$47d4ff9957288465$var$objectFromInputs","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","forEach","el","name","value","delay1","Number","i","amount","step","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ede9c2e2.js.map"}